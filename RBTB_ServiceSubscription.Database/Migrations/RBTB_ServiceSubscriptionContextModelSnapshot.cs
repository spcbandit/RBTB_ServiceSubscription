// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RBTB_ServiceSubscription.Database.Context;

#nullable disable

namespace RBTB_ServiceSubscription.Database.Migrations
{
    [DbContext(typeof(RBTB_ServiceSubscriptionContext))]
    partial class RBTB_ServiceSubscriptionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RBTB_ServiceSubscription.Application.Entites.SubscriptionsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("RBTB_ServiceSubscription.Application.Entites.UsersEntity", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RBTB_ServiceSubscription.Application.Entites.SubscriptionsEntity", b =>
                {
                    b.HasOne("RBTB_ServiceSubscription.Application.Entites.UsersEntity", "UsersEntity")
                        .WithMany("SubscriptionsEntites")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsersEntity");
                });

            modelBuilder.Entity("RBTB_ServiceSubscription.Application.Entites.UsersEntity", b =>
                {
                    b.Navigation("SubscriptionsEntites");
                });
#pragma warning restore 612, 618
        }
    }
}
